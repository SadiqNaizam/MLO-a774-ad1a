import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import TechnologySelector, { TechnologyCategory } from '@/components/TechnologySelector'; // Custom component
import { ScrollArea } from '@/components/ui/scroll-area';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { NavigationMenu, NavigationMenuItem, NavigationMenuLink, NavigationMenuList, navigationMenuTriggerStyle } from '@/components/ui/navigation-menu';
import { toast } from 'sonner';
import { FileText, Copy, Download, Settings2 } from 'lucide-react';

// Sample data for TechnologySelector
const sampleCategoriesData: TechnologyCategory[] = [
  {
    id: 'languages',
    name: 'Programming Languages',
    items: [
      { id: 'node', name: 'Node.js', description: '.gitignore for Node.js projects (node_modules, logs)' },
      { id: 'python', name: 'Python', description: '.gitignore for Python projects (venv, __pycache__)' },
      { id: 'java', name: 'Java', description: '.gitignore for Java/Maven/Gradle projects (target, build)' },
      { id: 'ruby', name: 'Ruby', description: '.gitignore for Ruby/Rails projects (log, tmp)' },
      { id: 'go', name: 'Go', description: '.gitignore for Go projects (binaries, vendor)' },
      { id: 'rust', name: 'Rust', description: '.gitignore for Rust projects (target)' },
    ],
  },
  {
    id: 'ides',
    name: 'IDEs & Editors',
    items: [
      { id: 'vscode', name: 'Visual Studio Code', description: 'Ignore .vscode directory' },
      { id: 'intellij', name: 'IntelliJ IDEA', description: 'Ignore .idea directory and *.iml files' },
      { id: 'sublimetext', name: 'Sublime Text', description: 'Ignore *.sublime-project, *.sublime-workspace' },
      { id: 'vim', name: 'Vim', description: 'Ignore swap files (*.swp, *.swo)' },
    ],
  },
  {
    id: 'os',
    name: 'Operating Systems',
    items: [
      { id: 'macos', name: 'macOS', description: 'Ignore .DS_Store, .Spotlight-V100' },
      { id: 'windows', name: 'Windows', description: 'Ignore Thumbs.db, Desktop.ini' },
      { id: 'linux', name: 'Linux', description: 'General Linux editor backup files (*~)' },
    ],
  },
  {
    id: 'tools',
    name: 'Build Tools & Frameworks',
    items: [
        { id: 'react', name: 'React', description: 'Common React project ignores (build, .env.local)' },
        { id: 'vue', name: 'Vue.js', description: 'Common Vue.js project ignores (dist, .env.local)' },
        { id: 'angular', name: 'Angular', description: 'Common Angular project ignores (dist, node_modules/.cache)' },
        { id: 'docker', name: 'Docker', description: 'Ignore Dockerfile.local, .dockerignore specifics' },
    ]
  }
];

// Placeholder .gitignore content snippets for demo
const gitignoreSnippets: Record<string, string> = {
  node: "# Node.js\nnode_modules/\nnpm-debug.log\nyarn-error.log\n.env\n.DS_Store",
  python: "# Python\n__pycache__/\n*.py[cod]\n*$py.class\n.venv/\nvenv/\nENV/\nenv.bak/\n.env",
  java: "# Java\n*.class\n*.log\ntarget/\n.project\n.settings/\nbuild/",
  ruby: "# Ruby / Rails\n*.gem\n/.config\n/coverage/\n/log/\n/tmp/",
  vscode: "# Visual Studio Code\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.code-workspace",
  intellij: "# IntelliJ IDEA\n.idea/\n*.iml\n*.ipr\n*.iws\nout/",
  macos: "# macOS\n.DS_Store\n.AppleDouble\n.LSOverride\n._*\n.Spotlight-V100\n.Trashes",
  windows: "# Windows\nThumbs.db\nehthumbs.db\nDesktop.ini\n$RECYCLE.BIN/",
  linux: "# Linux\n*~\n.directory",
  react: "# React\nbuild/\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local",
  vue: "# Vue.js\ndist/\n.env.local",
  angular: "# Angular\ndist/\nnode_modules/.cache\n*.log",
  docker: "# Docker\nDockerfile.local\n.dockerignore",
  go: "# Go\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\nbin/\npkg/\nvendor/",
  rust: "# Rust\ntarget/\nCargo.lock"
};


const GeneratorPage = () => {
  const [selectedTechnologyIds, setSelectedTechnologyIds] = useState<string[]>([]);
  const [generatedGitignoreContent, setGeneratedGitignoreContent] = useState<string>('');

  useEffect(() => {
    console.log('GeneratorPage loaded');
  }, []);

  const handleSelectionChange = (newSelectedIds: string[]) => {
    setSelectedTechnologyIds(newSelectedIds);
  };

  const handleGenerateGitignore = () => {
    if (selectedTechnologyIds.length === 0) {
      toast.info("Please select at least one technology to generate a .gitignore file.");
      setGeneratedGitignoreContent('');
      return;
    }

    let content = `# Generated by .gitignore Master for: ${selectedTechnologyIds.join(', ')}\n\n`;
    selectedTechnologyIds.forEach(id => {
      if (gitignoreSnippets[id]) {
        content += gitignoreSnippets[id] + '\n\n';
      }
    });
    setGeneratedGitignoreContent(content.trim());
    toast.success("Generated .gitignore content!");
  };

  const handleCopyToClipboard = () => {
    if (!generatedGitignoreContent) {
      toast.error("Nothing to copy!");
      return;
    }
    navigator.clipboard.writeText(generatedGitignoreContent)
      .then(() => {
        toast.success("Copied to clipboard!");
      })
      .catch(err => {
        console.error("Failed to copy:", err);
        toast.error("Failed to copy to clipboard.");
      });
  };

  const handleDownloadFile = () => {
    if (!generatedGitignoreContent) {
      toast.error("Nothing to download!");
      return;
    }
    const blob = new Blob([generatedGitignoreContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = '.gitignore';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    toast.success(".gitignore file download started!");
  };
  
  return (
    <div className="flex flex-col min-h-screen bg-background text-foreground">
      {/* Header */}
      <header className="sticky top-0 z-40 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
        <div className="container flex h-16 items-center justify-between px-4 md:px-6">
          <Link to="/" className="flex items-center space-x-2">
            <FileText className="h-6 w-6 text-primary" />
            <span className="font-bold text-lg">.gitignore Master</span>
          </Link>
          <NavigationMenu>
            <NavigationMenuList>
              <NavigationMenuItem>
                <Link to="/">
                  <NavigationMenuLink className={navigationMenuTriggerStyle()}>
                    Generator
                  </NavigationMenuLink>
                </Link>
              </NavigationMenuItem>
              <NavigationMenuItem>
                <Link to="/analyzer">
                  <NavigationMenuLink className={navigationMenuTriggerStyle()}>
                    Analyzer
                  </NavigationMenuLink>
                </Link>
              </NavigationMenuItem>
              <NavigationMenuItem>
                <Link to="/templates">
                  <NavigationMenuLink className={navigationMenuTriggerStyle()}>
                    Templates
                  </NavigationMenuLink>
                </Link>
              </NavigationMenuItem>
              <NavigationMenuItem>
                <Link to="/about">
                  <NavigationMenuLink className={navigationMenuTriggerStyle()}>
                    About
                  </NavigationMenuLink>
                </Link>
              </NavigationMenuItem>
            </NavigationMenuList>
          </NavigationMenu>
        </div>
      </header>

      {/* Main Content */}
      <main className="flex-1 container mx-auto px-4 py-8 md:py-12">
        <div className="max-w-4xl mx-auto space-y-10">
          <section className="text-center">
            <h1 className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl flex items-center justify-center">
              <Settings2 className="mr-3 h-8 w-8 sm:h-10 sm:w-10" />
              Create Your .gitignore
            </h1>
            <p className="mt-3 text-base text-muted-foreground sm:mt-5 sm:text-lg md:text-xl">
              Select technologies, tools, and operating systems to generate a tailored .gitignore file for your project.
            </p>
          </section>

          <TechnologySelector
            categories={sampleCategoriesData}
            selectedTechnologyIds={selectedTechnologyIds}
            onSelectionChange={handleSelectionChange}
            title="1. Select Your Project Stack"
            description="Choose all relevant items. The .gitignore will combine rules for each selection."
          />

          <section className="text-center">
            <Button size="lg" onClick={handleGenerateGitignore}>
              <Settings2 className="mr-2 h-5 w-5" />
              Generate .gitignore
            </Button>
          </section>

          { (selectedTechnologyIds.length > 0 || generatedGitignoreContent) && (
            <section className="space-y-4">
              <h2 className="text-2xl font-semibold tracking-tight">2. Review & Use Your .gitignore</h2>
              <ScrollArea className="h-80 w-full rounded-md border bg-muted/20">
                <Textarea
                  placeholder="Your generated .gitignore content will appear here after clicking 'Generate'."
                  value={generatedGitignoreContent}
                  readOnly
                  className="min-h-[300px] w-full resize-none border-0 p-4 font-mono text-sm focus-visible:ring-0 focus-visible:ring-offset-0 bg-transparent"
                  aria-label="Generated .gitignore content"
                />
              </ScrollArea>
              <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3">
                <Button onClick={handleCopyToClipboard} disabled={!generatedGitignoreContent} className="w-full sm:w-auto">
                  <Copy className="mr-2 h-4 w-4" /> Copy to Clipboard
                </Button>
                <Button onClick={handleDownloadFile} variant="outline" disabled={!generatedGitignoreContent} className="w-full sm:w-auto">
                  <Download className="mr-2 h-4 w-4" /> Download .gitignore File
                </Button>
              </div>
            </section>
          )}
        </div>
      </main>

      {/* Footer */}
      <footer className="border-t bg-muted/50">
        <div className="container flex flex-col items-center justify-center gap-2 h-20 md:flex-row px-4 md:px-6">
          <p className="text-sm text-muted-foreground">
            &copy; {new Date().getFullYear()} .gitignore Master. All rights reserved.
          </p>
        </div>
      </footer>
    </div>
  );
};

export default GeneratorPage;